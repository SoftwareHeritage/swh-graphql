interface Node {
  id: String!
}

type PageInfo {
  endCursor: String
  startCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
}

type Origin implements Node {
  url: String!
  id: String!
}

type OriginConnection {
  nodes: [Origin]!
  # PageInfo: PageInfo!
}

type Query {
  """
  Get an origin with its url
  """
  origin(
    url: String!
  ): Origin

  """
  Get a list of origins
  matching the given filters
  """
  originSearch(
    after: String
    before: String
    first: Int
  ): OriginConnection!
}
