interface Node {
  id: ID!
}

# interface SwhArtifact {
#   swhid: String!
# }

type PageInfo {
  endCursor: String
  hasNextPage: Boolean!
}

# Origin

type Origin implements Node {
  url: String!
  id: ID!
}

# type OriginEdge {
#   cursor: String!
#   node: [Origin]
# }

type OriginConnection {
  # edges: [OriginEdge]
  nodes: [Origin]
  pageInfo: PageInfo!
  totalCount: Int!
}

# Origin end

type Query {
  """
  Get an origin with its url
  """
  origin(
    url: String!
  ): Origin

  """
  Get a list of origins
  matching the given filters
  """
  origins(
    first: Int
    after: String
  ): OriginConnection!
}
